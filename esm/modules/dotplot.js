import*as e from"../highcharts.js";var t={};t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var s in r)t.o(r,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:r[s]})},t.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);let r=e.default;var s=t.n(r);let i=e.default.SeriesRegistry;var o=t.n(i);let{column:a}=o().seriesTypes,{extend:l,isNumber:d,merge:h,pick:p}=s();class n extends a{drawPoints(){let e=this.options,t=this.chart.renderer,r=e.marker,s=this.points.reduce((e,t)=>e+Math.abs(t.y||0),0),i=this.points.reduce((e,t)=>e+(t.shapeArgs?.height||0),0),o=e.itemPadding||0,a=this.points[0]?.shapeArgs?.width||0,h=e.slotsPerBar,n=a;if(!d(h))for(h=1;h<s&&!(s/h<i/n*1.2);)n=a/++h;let c=i*h/s;for(let e of this.points){let s=e.marker||{},i=s.symbol||r.symbol,a=p(s.radius,r.radius),d="rect"!==i?c:n,g=e.shapeArgs||{},y=(g.x||0)+((g.width||0)-h*d)/2,f=Math.abs(e.y??0),m=g.y||0,u=g.height||0,v,b=y,A=e.negative?m:m+u-c,P=0;e.graphics=v=e.graphics||[];let k=e.pointAttr?e.pointAttr[e.selected?"selected":""]||this.pointAttr[""]:this.pointAttribs(e,e.selected&&"select");if(delete k.r,this.chart.styledMode&&(delete k.stroke,delete k["stroke-width"]),"number"==typeof e.y){e.graphic||(e.graphic=t.g("point").add(this.group));for(let r=0;r<f;r++){let s={x:b+d*o,y:A+c*o,width:d*(1-2*o),height:c*(1-2*o),r:a},p=v[r];p?p.animate(s):p=t.symbol(i).attr(l(s,k)).add(e.graphic),p.isActive=!0,v[r]=p,b+=d,++P>=h&&(P=0,b=y,A=e.negative?A+c:A-c)}}let w=-1;for(let e of v)++w,e&&(e.isActive?e.isActive=!1:(e.destroy(),v.splice(w,1)))}}}n.defaultOptions=h(a.defaultOptions,{itemPadding:.1,marker:{symbol:"circle",states:{hover:{},select:{}}},slotsPerBar:void 0}),l(n.prototype,{markerAttribs:void 0}),o().registerSeriesType("dotplot",n);let c=s();export{c as default};